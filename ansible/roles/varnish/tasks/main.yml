---
- name: Include OS-specific variables.
  include_vars: "default.yml"

- name: Set the packagecloud repository name based on the version.
  set_fact:
    varnish_packagecloud_repo: "varnish{{ varnish_version|replace('.', '') }}"

- name: Ensure APT HTTPS Transport is installed.
  apt:
    name: apt-transport-https
    state: present
  become: yes

- name: Add packagecloud.io Varnish apt key.
  apt_key:
    url: https://packagecloud.io/varnishcache/{{ varnish_packagecloud_repo }}/gpgkey
    state: present
  become: yes

- name: Add packagecloud.io Varnish apt repository.
  apt_repository:
    repo: "deb https://packagecloud.io/varnishcache/{{ varnish_packagecloud_repo }}/{{ ansible_distribution | lower }}/ {{ ansible_distribution_release }} main"
    state: present
  become: yes

- name: Ensure Varnish is installed.
  apt:
    name: "{{ varnish_package_name }}"
    state: present
  become: yes

- name: Change Apache listen port
  lineinfile:
    path: /etc/apache2/ports.conf
    regexp: '^Listen '
    line: 'Listen {{ apache2_port }}'
    state: present
    create: yes
  become: yes
  notify:
    - apache-reload

- name: Ensure old role-managed Varnish systemd unit file is removed.
  file:
    path: /etc/systemd/system/varnish.service
    state: absent
  when: varnish_systemd_config_path != '/etc/systemd/system'

- name: Ensure Varnish config path exists.
  file:
    path: "{{ varnish_config_path }}"
    state: directory

- name: Copy Varnish configuration (sysvinit).
  template:
    src: varnish.j2
    dest: "{{ varnish_sysvinit_config_path }}/varnish"
    owner: root
    group: root
    mode: 0644
  when: >
    (ansible_os_family == 'Debian' and ansible_distribution_release != "xenial")
  become: yes

- name: Copy Debian Jessie/Xenial specific Varnish configs (systemd).
  template:
    src: varnish.service.j2
    dest: "{{ varnish_systemd_config_path }}/varnish.service"
    owner: root
    group: root
    mode: 0644
  when: >
    (ansible_distribution == 'Debian' and ansible_distribution_version|int >= 8) or
    (ansible_distribution == 'Ubuntu' and ansible_distribution_version.split(".")[0]|int >= 16)
  notify:
    - reload systemd
    - restart varnish
  become: yes

- name: Copy Varnish configuration (systemd).
  template:
    src: varnish.params.j2
    dest: "{{ varnish_config_path }}/varnish.params"
    owner: root
    group: root
    mode: 0644
  when: >
    (ansible_os_family == 'Debian' and ansible_distribution_release == "xenial")
  become: yes

- name: Copy Varnish default VCL.
  template:
    src: "{{ varnish_default_vcl_template_path }}"
    dest: "{{ varnish_config_path }}/default.vcl"
    owner: root
    group: root
    mode: 0644
  when: varnish_use_default_vcl
  notify: restart varnish
  become: yes

- name: Copy varnish secret.
  template:
    src: secret.j2
    dest: "{{ varnish_config_path }}/secret"
    owner: root
    group: root
    mode: 0644
  notify: restart varnish
  become: yes

- name: Ensure Varnish services are started and enabled on startup.
  service:
    name: "{{ item }}"
    state: started
    enabled: yes
  with_items: "{{ varnish_enabled_services | default([]) }}"
  when: >
    varnish_enabled_services and
    (ansible_os_family != 'Debian' and ansible_distribution_release != "xenial")
  become: yes

# See: https://github.com/ansible/ansible/issues/22303
- name: Ensure Varnish services are started enabled on startup (Xenial specific)
  service:
    name: "{{ item }}"
    state: started
    enabled: yes
    use: "service"
  with_items: "{{ varnish_enabled_services | default([]) }}"
  when:
    - varnish_enabled_services
    - (ansible_os_family == 'Debian' and ansible_distribution_release == "xenial")
  become: yes
